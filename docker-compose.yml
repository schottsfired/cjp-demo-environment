version: "2"

services:
  # https://hub.docker.com/_/nginx/
  proxy:
    container_name: cjp.local
    image: nginx:1.10-alpine
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    depends_on: # to force proxy to start behind
      - cjoc
      - cje-test
      - cje-prod

  # https://hub.docker.com/r/cloudbees/jenkins-operations-center/
  cjoc:
    container_name: cjoc
    image: cloudbees/jenkins-operations-center:2.19.3.1
    environment:
      JENKINS_SLAVE_AGENT_PORT: "50000"
      JENKINS_HA: "false"
      JAVA_OPTS: "-Dhudson.TcpSlaveAgentListener.hostName=cjoc -Dhudson.TcpSlaveAgentListener.port=50000 -Dhudson.udp=-1 -Dhudson.DNSMultiCast.disabled=true -Djava.awt.headless=true -Xmx1024m -Xms256m -Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York"
      # https://wiki.jenkins-ci.org/display/JENKINS/Features+controlled+by+system+properties
      JENKINS_OPTS: "--prefix=/cjoc"
    volumes:
      - ./data/cjoc:/var/jenkins_home

  # https://hub.docker.com/r/cloudbees/jenkins-enterprise/
  cje-prod:
    container_name: cje-prod
    image: cloudbees/jenkins-enterprise:2.19.3.1
    environment:
      JENKINS_SLAVE_AGENT_PORT: "50000"
      JENKINS_HA: "false"
      JAVA_OPTS: "-Dhudson.TcpSlaveAgentListener.hostName=cje-prod -Dhudson.TcpSlaveAgentListener.port=50000 -Dhudson.udp=-1 -Dhudson.DNSMultiCast.disabled=true -Djava.awt.headless=true -Xmx2048m -Xms256m -Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York"
      JENKINS_OPTS: "--prefix=/cje-prod"
    volumes:
      - ./data/cje-prod:/var/jenkins_home
    volumes_from:
      - ssh-slave

  # https://hub.docker.com/r/cloudbees/jenkins-enterprise/
  cje-test:
    container_name: cje-test
    build:
      context: ./docker/
      dockerfile: Dockerfile.cje-test
    environment:
      JENKINS_SLAVE_AGENT_PORT: "50000"
      JENKINS_HA: "false"
      JAVA_OPTS: "-Dhudson.TcpSlaveAgentListener.hostName=cje-test -Dhudson.TcpSlaveAgentListener.port=50000 -Dhudson.udp=-1 -Dhudson.DNSMultiCast.disabled=true -Djava.awt.headless=true -Xmx2048m -Xms256m -Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York"
      JENKINS_OPTS: "--prefix=/cje-test"
    volumes:
      - ./data/cje-test:/var/jenkins_home
    volumes_from:
      - ssh-slave

  # https://hub.docker.com/r/jenkinsci/ssh-slave/
  ssh-slave:
    container_name: ssh-slave
    build:
      context: ./docker/
      dockerfile: Dockerfile.ssh-slave
    # command is specific to your env.. see README
    command: ["${SSH_SLAVE_COMMAND}"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # for DonD
      - ${MAVEN_CACHE} # to persist and share the precious maven cache

  # https://hub.docker.com/r/cloudbees/jnlp-slave-with-java-build-tools/
  # disregard initial startup error, we can start it later
  # wait for https://github.com/docker/compose/issues/1896
  jnlp-slave:
    container_name: jnlp-slave
    build:
      context: ./docker/
      dockerfile: Dockerfile.jnlp-slave
    environment:
      JENKINS_URL: "http://cjp.local/cjoc"
    #command is specific to your env.. see README
    command: ["${JNLP_SLAVE_COMMAND}", "shared-cloud"]
    volumes_from:
      - ssh-slave

  # https://hub.docker.com/r/jenkinsci/ssh-slave/
  swarm-slave:
    build:
      context: ./docker/
      dockerfile: Dockerfile.swarm-slave
    environment:
      JENKINS_URL: "http://cjp.local/cjoc"
    #command is specific to your env.. see README
    entrypoint: /usr/bin/java -jar /usr/bin/swarm-client.jar -master ${URL} -name swarm-slave -labels docker-swarm -username ${USERNAME} -password ${PASSWORD}
    volumes_from:
      - ssh-slave

  # https://hub.docker.com/r/verb/socat/
  # clever way to expose host docker engine to internal services
  docker-service:
    container_name: docker-service
    image: verb/socat:alpine
    command: tcp-listen:2375,reuseaddr,fork unix:/docker.sock
    expose:
      - "2375"
    volumes:
      - /var/run/docker.sock:/docker.sock
